<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.edu.henu.dao.ExamMapper">
    <resultMap id="ExamResult" type="cn.edu.henu.bean.Exam">
        <id property="exam_id" column="exam_id"/>
        <result property="exam_name" column="exam_name"/>
        <result property="exam_starttime" column="exam_starttime"/>
        <result property="exam_endtime" column="exam_endtime"/>
        <result property="exam_room" column="exam_room"/>
        <result property="exam_capacity" column="exam_capacity"/>
        <result property="exam_ipwhite" column="exam_ipwhite"/>
        <result property="exam_ipblack" column="exam_ipblack"/>
    </resultMap>

    <resultMap id="ExamWithTeacherResult" type="cn.edu.henu.bean.Exam">
        <id property="exam_id" column="exam_id"/>
        <result property="exam_name" column="exam_name"/>
        <result property="exam_starttime" column="exam_starttime"/>
        <result property="exam_endtime" column="exam_endtime"/>
        <result property="exam_room" column="exam_room"/>
        <result property="exam_capacity" column="exam_capacity"/>
        <result property="exam_ipwhite" column="exam_ipwhite"/>
        <result property="exam_ipblack" column="exam_ipblack"/>
        <!--多对多关联映射 -->
        <collection property="teachers" ofType="cn.edu.henu.bean.Teacher">
            <id column="teacher_id" property="teacher_id"/>
            <result column="teacher_password" property="teacher_password"/>
            <result column="teacher_name" property="teacher_name"/>
            <result column="teacher_faculty" property="teacher_faculty"/>
            <result column="teacher_major" property="teacher_major"/>
        </collection>
    </resultMap>

    <resultMap id="ExamWithStudentResult" type="cn.edu.henu.bean.Exam">
        <id property="exam_id" column="exam_id"/>
        <result property="exam_name" column="exam_name"/>
        <result property="exam_starttime" column="exam_starttime"/>
        <result property="exam_endtime" column="exam_endtime"/>
        <result property="exam_room" column="exam_room"/>
        <result property="exam_capacity" column="exam_capacity"/>
        <result property="exam_ipwhite" column="exam_ipwhite"/>
        <result property="exam_ipblack" column="exam_ipblack"/>
        <!--多对多关联映射 -->
        <collection property="students" ofType="cn.edu.henu.bean.Student">
            <id column="student_id" property="student_id"/>
            <result column="student_password" property="student_password"/>
            <result column="student_name" property="student_name"/>
            <result column="student_faculty" property="student_faculty"/>
            <result column="student_major" property="student_major"/>
        </collection>
    </resultMap>

    <!--——————————————————联表增删改查————————————————————————-->
    <!--student和exam多对多：-->
    <!--查询某位学生参加的考试-->
    <select id="findExamWithStudent" resultMap="ExamWithStudentResult">
        select t.*,e.*
        from student t,exam e,student_exam te
        where te.student_exam_student_id=t.student_id
          and te.student_exam_exam_id=e.exam_id
          and t.student_id=#{student_id}
    </select>
    <!--查询某位学生参加的考试数量-->
    <select id="findExamCountWithStudent" resultType="int">
        select count(te.student_exam_exam_id)
        from student_exam te
        where te.student_exam_exam_id=#{student_exam_exam_id}
    </select>
    <!--为某位学生添加考试-->
    <insert id="addForStudent" parameterType="cn.edu.henu.bean.Student_exam" useGeneratedKeys="true" >
        insert into student_exam(student_exam_student_id,student_exam_exam_id)
        values(#{student_exam_student_id},#{student_exam_exam_id})
    </insert>
    <!--为某位学生批量添加考试-->
    <insert id="batchAddForStudent" parameterType="java.util.List" useGeneratedKeys="true" >
        insert into student_exam(student_exam_student_id,student_exam_exam_id) values
        <foreach collection ="list" item="student_exam" separator =",">
            (#{student_exam.student_exam_student_id}, #{student_exam.student_exam_exam_id})
        </foreach>
    </insert>
    <!--为某位学生删除考试-->
    <delete id="deleteForStudent" >
        delete from student_exam
        where student_exam_student_id = #{student_exam_student_id}
          and student_exam_exam_id = #{student_exam_exam_id}
    </delete>
    <!--为某位学生批量删除考试-->
    <delete id="batchDeleteForStudent" parameterType="java.util.List">
        delete from student_exam where student_exam_exam_id in
        <foreach collection ="list" open="(" close=")" separator="," item="student_exam_exam_id">
            #{student_exam_exam_id}
        </foreach>
        and student_exam_student_id = #{student_exam_student_id}
    </delete>

    <!--teacher和exam多对多：-->
    <!--查询某位教师的监考任务（即监考的考试）-->
    <select id="findExamWithTeacher" resultMap="ExamWithTeacherResult">
        select t.*,e.*
        from teacher t,exam e,teacher_exam te
        where te.teacher_exam_teacher_id=t.teacher_id
          and te.teacher_exam_exam_id=e.exam_id
          and t.teacher_id=#{teacher_id}
    </select>
    <!--查询某位教师的监考任务数量-->
    <select id="findExamCountWithTeacher" resultType="int">
        select count(te.teacher_exam_exam_id)
        from teacher_exam te
        where te.teacher_exam_exam_id=#{teacher_exam_exam_id}
    </select>
    <!--为某位教师添加监考任务-->
    <insert id="addForTeacher" parameterType="cn.edu.henu.bean.Teacher_exam" useGeneratedKeys="true" >
        insert into teacher_exam(teacher_exam_teacher_id,teacher_exam_exam_id)
        values(#{teacher_exam_teacher_id},#{teacher_exam_exam_id})
    </insert>
    <!--为某位教师批量添加监考任务-->
    <insert id="batchAddForTeacher" parameterType="java.util.List" useGeneratedKeys="true" >
        insert into teacher_exam(teacher_exam_teacher_id,teacher_exam_exam_id) values
        <foreach collection ="list" item="teacher_exam" separator =",">
            (#{teacher_exam.teacher_exam_teacher_id}, #{teacher_exam.teacher_exam_exam_id})
        </foreach>
    </insert>
    <!--为某位教师删除监考任务-->
    <delete id="deleteForTeacher" >
        delete from teacher_exam
        where teacher_exam_teacher_id = #{teacher_exam_teacher_id}
        and teacher_exam_exam_id = #{teacher_exam_exam_id}
    </delete>
    <!--为某位教师批量删除考试-->
    <delete id="batchDeleteForTeacher" parameterType="java.util.List">
        delete from teacher_exam where teacher_exam_exam_id in
        <foreach collection ="list" open="(" close=")" separator="," item="teacher_exam_exam_id">
            #{teacher_exam_exam_id}
        </foreach>
        and teacher_exam_teacher_id = #{teacher_exam_teacher_id}
    </delete>

    <!--——————————————————单表增删改查——————————————————————-->
    <!--查询考试：-->
    <!--根据主键id查询考试-->
    <select id="findByPrimaryKey" resultMap="ExamResult">
        select * from exam where exam_id = #{exam_id}
    </select>
    <!--查询全部考试-->
    <select id="findAll" resultMap="ExamResult">
        select * from exam
    </select>
    <!--查询考试总数-->
    <select id="findAllCount" resultType="int">
        select count(exam_id) from exam
    </select>
    <!--根据条件查询考试-->
    <select id="findByCondition" resultMap="ExamResult">
        select * from exam
        <where>
            <!-- <if test="exam_id != null and exam_id != '' ">
                 and exam_id = #{exam_id}
             </if>-->
            <if test="exam_name != null and exam_name != '' ">
                and exam_name = #{exam_name}
            </if>
            <if test="exam_starttime != null and exam_starttime != '' ">
                and exam_starttime = #{exam_starttime}
            </if>
            <if test="exam_endtime != null and exam_endtime != '' ">
                and exam_endtime = #{exam_endtime}
            </if>
            <if test="exam_room != null and exam_room != '' ">
                and exam_room = #{exam_room}
            </if>
            <if test="exam_capacity != null and exam_capacity != '' ">
                and exam_capacity = #{exam_capacity}
            </if>
            <if test="exam_ipwhite != null and exam_ipwhite != '' ">
                and exam_ipwhite = #{exam_ipwhite}
            </if>
            <if test="exam_ipblack != null and exam_ipblack != '' ">
                and exam_ipblack = #{exam_ipblack}
            </if>
        </where>
    </select>
    <!--根据条件查询考试数量-->
    <select id="findCountByCondition" resultType="int">
        select count(exam_id) from exam
        <where>
            <!--<if test="exam_id != null and exam_id != '' ">
                and exam_id = #{exam_id}
            </if>-->
            <if test="exam_name != null and exam_name != '' ">
                and exam_name = #{exam_name}
            </if>
            <if test="exam_starttime != null and exam_starttime != '' ">
                and exam_starttime = #{exam_starttime}
            </if>
            <if test="exam_endtime != null and exam_endtime != '' ">
                and exam_endtime = #{exam_endtime}
            </if>
            <if test="exam_room != null and exam_room != '' ">
                and exam_room = #{exam_room}
            </if>
            <if test="exam_capacity != null and exam_capacity != '' ">
                and exam_capacity = #{exam_capacity}
            </if>
            <if test="exam_ipwhite != null and exam_ipwhite != '' ">
                and exam_ipwhite = #{exam_ipwhite}
            </if>
            <if test="exam_ipblack != null and exam_ipblack != '' ">
                and exam_ipblack = #{exam_ipblack}
            </if>
        </where>
    </select>

    <!--添加考试 返回主键exam_id-->
    <insert id="add" parameterType="cn.edu.henu.bean.Exam" useGeneratedKeys="true" keyProperty="exam_id">
        insert into exam(exam_name,exam_starttime,exam_endtime,exam_room,exam_capacity,exam_ipwhite,exam_ipblack)
        values(#{exam_name},#{exam_starttime},#{exam_endtime},#{exam_room},#{exam_capacity},#{exam_ipwhite},#{exam_ipblack})
    </insert>
    <!--删除考试-->
    <delete id="deleteByPrimaryKey">
        delete from exam where exam_id = #{exam_id}
    </delete>
    <!--批量删除考试-->
    <delete id="batchDelete" parameterType="java.util.List">
        delete from exam where exam_id in
        <foreach collection="list" open="(" close=")" separator="," item="exam_id">
            #{exam_id}
        </foreach>
    </delete>
    <!--根据主键更新考试-->
    <update id="update" parameterType="cn.edu.henu.bean.Exam">
        update exam
        <set>
            <if test="exam_name != null and exam_name != '' ">
                exam_name = #{exam_name},
            </if>
            <if test="exam_starttime != null and exam_starttime != '' ">
                exam_starttime = #{exam_starttime},
            </if>
            <if test="exam_endtime != null and exam_endtime != '' ">
                exam_endtime = #{exam_endtime},
            </if>
            <if test="exam_room != null and exam_room != '' ">
                exam_room = #{exam_room},
            </if>
            <if test="exam_capacity != null and exam_capacity != '' ">
                exam_capacity = #{exam_capacity},
            </if>
            <if test="exam_ipwhite != null and exam_ipwhite != '' ">
                exam_ipwhite = #{exam_ipwhite},
            </if>
            <if test="exam_ipblack != null and exam_ipblack != '' ">
                exam_ipblack = #{exam_ipblack},
            </if>
        </set>
        where exam_id = #{exam_id}
    </update>

</mapper>